import Head from "next/head";

import { useEffect, useState } from "react";
import { Event } from "@prisma/client";
import { Card, CardHeader, CardTitle } from "~/components/ui/card";
import { Button } from "~/components/ui/button";
import { Badge } from "~/components/ui/badge";
import { Label } from "~/components/ui/label";
import { Input } from "~/components/ui/input";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogClose,
} from "~/components/ui/dialog";

import { useAuth } from "@clerk/nextjs";
import { createClient } from "@supabase/supabase-js";
import FilterTeams from "~/components/odds/FilterTeams";

const dateToString = (date: Date) => {
  date = new Date(date);
  let str = "";

  if (date.getHours() !== 0) {
    str += date.getHours() <= 12 ? date.getHours() : date.getHours() - 12;
  } else {
    str += "12";
  }

  str += ":";

  if (date.getMinutes() < 10) str += "0";
  str += date.getMinutes();
  str += date.getHours() >= 12 ? " PM" : " AM";

  return str;
};

export default function allOdds() {
  const [events, setEvents] = useState<Event[]>([]);
  const [query, setQuery] = useState("");
  const [checkNFL, setCheckNFL] = useState(true);
  const [checkNBA, setCheckNBA] = useState(true);
  const [checkMLB, setCheckMLB] = useState(true);

  const { userId, getToken } = useAuth();

  useEffect(() => {
    const fetch = async () => {
      const supabase = createClient(
        process.env.NEXT_PUBLIC_SUPABASE_API_URL!,
        process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
      );
      const token = await getToken({ template: "supabase" });
      // const supabase = await supabaseClient(token);
      const { data, error } = await supabase.from("Event").select();

      setEvents(data as Event[]);
    };
    fetch();
  }, []);

  return (
    <>
      <Head>
        <title>Bet Blitz</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-start bg-[#EEEEEE]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-black uppercase tracking-tight text-[#222831] sm:text-[5rem]">
            Bet Blitz
          </h1>
          <FilterTeams 
            checkNFL={checkNFL} 
            setCheckNFL={setCheckNFL}
            checkMLB={checkMLB} 
            setCheckMLB={setCheckMLB}
            checkNBA={checkNBA}
            setCheckNBA={setCheckNBA}
          />
          {events && (
            <div className="w-full max-w-xl">
              <Input
                placeholder="Search up a team"
                value={query}
                onChange={(e) => setQuery(e.currentTarget.value)}
              />
            </div>
          )}
          <div className="flex w-full flex-wrap justify-center">
            {events &&
              events
                .filter((event: Event) => {
                  if (checkNFL && event.sportKey === "americanfootball_nfl") {
                    return true;
                  }
                  if (checkNBA && event.sportKey === "basketball_nba") {
                    return true;
                  }
                  if (checkMLB && event.sportKey === "baseball_mlb") {
                    return true;
                  }
                  return false;
                })
                .filter((event: Event) => {
                  if (
                    event.awayTeam?.toLowerCase().includes(query.toLowerCase()) ||
                    event.homeTeam?.toLowerCase().includes(query.toLowerCase())
                  ) {
                    return true;
                  }
                  return false;
                })
                .map((event: Event, index: number) => {
                  return (
                    <Card
                      key={`event${index}`}
                      className="relative m-8 w-80 bg-white shadow-xl"
                    >
                      <Badge className="absolute left-0 top-0 -translate-y-4 translate-x-4 p-2 shadow-md">
                        {dateToString(
                          event.commenceTime ? event.commenceTime : new Date(),
                        )}
                      </Badge>
                      <CardHeader>
                        <div className="flex flex-row items-center">
                          <CardTitle className="text-md flex-grow">
                            {event.teamOneName}
                          </CardTitle>
                          {event.teamOneOdds && (
                            <>
                              <Dialog>
                                <DialogTrigger>
                                  <div className="ml-4 h-10 rounded-md bg-primary px-4 py-2 text-primary-foreground hover:bg-primary/90">
                                    {event.teamOneOdds > 0 ? "+" : ""}
                                    {event.teamOneOdds}
                                  </div>
                                </DialogTrigger>
                                <DialogContent>
                                  <DialogHeader>
                                    <DialogTitle>
                                      Bet on {event.teamOneName}
                                    </DialogTitle>
                                    <DialogDescription>
                                      How many BlitzBux would you like to bet?
                                    </DialogDescription>
                                  </DialogHeader>
                                  <div className="grid grid-cols-4 items-center gap-4 py-6">
                                    <Label
                                      htmlFor="name"
                                      className="text-right"
                                    >
                                      Bet Amount
                                    </Label>
                                    <Input
                                      id="betAmount"
                                      defaultValue="100"
                                      className="col-span-3"
                                    />
                                  </div>
                                  <DialogFooter>
                                    <DialogClose>
                                      <div className="ml-4 h-10 rounded-md bg-primary px-4 py-2 text-primary-foreground hover:bg-primary/90">
                                        Place Bet
                                      </div>
                                    </DialogClose>
                                  </DialogFooter>
                                </DialogContent>
                              </Dialog>
                            </>
                          )}
                        </div>

                        <div className="flex items-center">
                          <div className="w-4 border-t border-gray-400"></div>
                          <span className="mx-4 flex-shrink font-black text-gray-400">
                            @
                          </span>
                          <div className="flex-grow border-t border-gray-400"></div>
                        </div>

                        <div className="flex flex-row items-center">
                          <CardTitle className="text-md flex-grow">
                            {event.teamTwoName}
                          </CardTitle>
                          {event.teamTwoOdds && (
                            <Dialog>
                              <DialogTrigger>
                                <div className="ml-4 h-10 rounded-md bg-primary px-4 py-2 text-primary-foreground hover:bg-primary/90">
                                  {event.teamTwoOdds > 0 ? "+" : ""}
                                  {event.teamTwoOdds}
                                </div>
                              </DialogTrigger>
                              <DialogContent>
                                <DialogHeader>
                                  <DialogTitle>
                                    Bet on {event.teamTwoName}
                                  </DialogTitle>
                                  <DialogDescription>
                                    How many BlitzBux would you like to bet?
                                  </DialogDescription>
                                </DialogHeader>
                                <div className="grid grid-cols-4 items-center gap-4">
                                  <Label htmlFor="name" className="text-right">
                                    Bet Amount
                                  </Label>
                                  <Input
                                    id="betAmount"
                                    defaultValue="100"
                                    className="col-span-3"
                                  />
                                </div>
                                <DialogFooter>
                                  <DialogClose>
                                    <Button type="submit">Place bet</Button>
                                  </DialogClose>
                                </DialogFooter>
                              </DialogContent>
                            </Dialog>
                          )}
                        </div>
                      </CardHeader>
                    </Card>
                  );
                })}
          </div>
        </div>
      </main>
    </>
  );
}
